import React, { useState } from 'react';
import TownMap from '../../assets/slumber-road-layout.png';
import BuildingSlot from './BuildingSlot';

const SlumberTown = (props) => {
	const [slots, setSlots] = useState([
		{
			id: 1,
			alias: 'Slot1',
			posX: 0,
			posY: 5,
			building: 'SlumberMill',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 2,
			alias: 'Slot2',
			posX: 0,
			posY: 80,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 3,
			alias: 'Slot3',
			posX: 0,
			posY: 80 * 2,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 4,
			alias: 'Slot4',
			posX: 0,
			posY: 80 * 3,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 5,
			alias: 'Slot5',
			posX: 180,
			posY: 30,
			building: 'None',
			active: true,
			height: 72,
			width: 105,
			isHover: false,
		},
		{
			id: 6,
			alias: 'Slot6',
			posX: 298,
			posY: 30,
			building: 'None',
			active: true,
			height: 72,
			width: 105,
			isHover: false,
		},
		{
			id: 7,
			alias: 'Slot7',
			posX: 177,
			posY: 135,
			building: 'None',
			active: true,
			height: 140,
			width: 73,
			isHover: false,
		},
		{
			id: 8,
			alias: 'Slot8',
			posX: 437,
			posY: 30,
			building: 'None',
			active: true,
			height: 72,
			width: 180,
			isHover: false,
		},
		{
			id: 9,
			alias: 'Slot9',
			posX: 280,
			posY: 135,
			building: 'None',
			active: true,
			height: 140,
			width: 78,
			isHover: false,
		},
		{
			id: 10,
			alias: 'Slot10',
			posX: 365,
			posY: 135,
			building: 'None',
			active: true,
			height: 140,
			width: 78,
			isHover: false,
		},
		{
			id: 11,
			alias: 'Slot11',
			posX: 450,
			posY: 135,
			building: 'None',
			active: true,
			height: 140,
			width: 78,
			isHover: false,
		},
		{
			id: 12,
			alias: 'Slot12',
			posX: 535,
			posY: 135,
			building: 'None',
			active: true,
			height: 140,
			width: 78,
			isHover: false,
		},
		{
			id: 13,
			alias: 'Slot13',
			posX: 655,
			posY: 5,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 14,
			alias: 'Slot14',
			posX: 655,
			posY: 80,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 15,
			alias: 'Slot15',
			posX: 655,
			posY: 80 * 2,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 16,
			alias: 'Slot16',
			posX: 655,
			posY: 80 * 3,
			building: 'None',
			active: true,
			height: 60,
			width: 140,
			isHover: false,
		},
		{
			id: 17,
			alias: 'Slot17',
			posX: 172,
			posY: -70,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 18,
			alias: 'Slot18',
			posX: 287,
			posY: -70,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 19,
			alias: 'Slot19',
			posX: 402,
			posY: -70,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 20,
			alias: 'Slot20',
			posX: 517,
			posY: -70,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 21,
			alias: 'Slot21',
			posX: 172,
			posY: 310,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 22,
			alias: 'Slot22',
			posX: 287,
			posY: 310,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 23,
			alias: 'Slot23',
			posX: 402,
			posY: 310,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
		{
			id: 24,
			alias: 'Slot24',
			posX: 517,
			posY: 310,
			building: 'None',
			active: true,
			height: 60,
			width: 105,
			isHover: false,
		},
	]);

	return (
		<div
			style={{
				backgroundImage: `url(${TownMap})`,
				width: 800,
				backgroundRepeat: 'no-repeat',
				backgroundSize: 500,
				backgroundPosition: 'center center',
				height: 300,
				position: 'relative',
			}}
		>
			<div>
				{slots
					.filter((slot, index) => {
						return slot.active;
					})
					.map((slot, index) => {
						return (
							<BuildingSlot
								slot={slot}
								index={index}
								bgColor={props.bgColor}
								slots={slots}
								setSlots={setSlots}
							/>
						);
					})}
			</div>
		</div>
	);
};

export default SlumberTown;
